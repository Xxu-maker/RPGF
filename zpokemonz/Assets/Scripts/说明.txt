本项目脚本基于YouTube博主Game Dev Experiments的视频教程疯狂改造而成。

技术有限见谅

1.关于异步：基本不用协程, Unity自己的异步弃用, 用UniTask;

2.UI写得有点垃圾, 但不完全是垃圾。
  十字键(DPad)我没办法写得更好了;
  公共通知、拖拽交换和背包无限滚动  应该不可能写得更好;
  无限滚动基于Unity商店资源EnhancedScroller拆解而成 (这辈子没见过比EnhancedScroller优秀的无限滚动);

3.建造模式处于初级测试阶段 有很多bug。
  比较大的问题是：确定放置UI下如果被射线检测到地板，会在确认放置时移动物体放置位置

4.人物动画只要按 "Assets/Resources/PlayerSpriteBase" 里的示例制作, 不需要制作Unity的Animator
  按照格式剪好, 脚本里有自动分配; 有路径直接读取就行。或者拖到物体脚本上
  (地图上的Sprite要注意一下每单位像素数和Transform位置精度)

5.移动方式：使用原作按格子移动, 有两个问题
  一、对Transform位置精度的很高的要求, 要算得很精确
  二、当玩家和Npc准备前往同一空格, 在同一帧计算同一格是否有物体时, 都会检测为没有物体
  导致玩家和Npc重合。(只想到标记所有地图格来解决, 但感觉很麻烦)

6.宝可梦相关数据用的Unity自己的ScriptableObject存储, 没有用json或者MySql, 感觉各有各的好吧, 主要也不会（

7.特性和战斗道具, 太复杂了, 我就是做到这一步爆炸的,
  我写了一点,
  大概逻辑是在每个触发点进行特性分类判断

8.宝可梦Sprites, 因为宝可梦动画图片太大，消耗阳大, 日思夜想, 决定抽帧, 相同帧延时补足
  分为呼吸帧和特殊动画帧，通过代码调整播放图片。(如果不想拆，调整帧率，并把特殊帧标记为0)

9.Sprites的大小标准一定按照2的次方(32、64、128)制作, 单张最好不要超过2048 (SpriteAtlas打包也可以)
  (不按标准会以最长边之上的一个2的次方数加载，阳耗性能)
  (像素图不清晰过滤模式选Point)

10.路径 "Assets/Sprite/测试用调色板及瓦片" 和 "Assets/Sprite/素材例示" 是测试用的，
  "Assets/Sprite/Tiles" 里的才是真的好好整理的，注意存放规则
  (图里的红N是为了让Unity剪裁和制作调色板(Paletters)时将图片完全录入，只需要修改素材图片即可完成所有改动)

11.对战宝可梦的阴影是另一份动画，相当于两个SpriteRenderer在放动画,另一个加了倾斜shader。(想了一万年)

12.粒子和预制体存放比较混乱

暂时想不到别的了